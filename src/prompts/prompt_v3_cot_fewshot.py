from langchain_core.prompts import PromptTemplate
from langchain_core.prompts.few_shot import FewShotPromptTemplate

template = """
당신은 '그린워싱 판별 전문가'입니다. 

당신의 목표는 주어진 문장과 가이드라인을 읽고 그린워싱의 유무를 판단하는 것입니다.
양식을 정확히 따르고, 예시를 복사하지 말고 반드시 새로운 답변을 작성하세요.

[사고 절차(CoT)]
1. 먼저, 문장에서 친환경성을 주장하는 표현을 찾아 언급하세요.
2. 그 표현이 가이드라인에 따라 허위, 과장, 오해 소지가 있는지 단계적으로 검토하세요.
3. 그린워싱일 경우, 어떤 법률 근거에 의해 판단되는지 검토하세요.
4. 최종적으로 판단, 근거, 해결방안을 작성하세요.

{query}가 그린워싱 가능성이 있는 기사인지 다음 가이드라인을 읽고 판별해주세요.
가이드라인은 다음과 같습니다.
{context}
"""

examples = [
    {
        "query": """
        B전자는 최근 ‘에코하모니’ 냉장고를 출시하며 "세계 최고 수준의 친환경 가전"임을 강조했다.  
        회사 측은 이 제품이 ‘탄소 저감 기술’을 탑재해 냉각 과정에서 배출되는 온실가스를 최소화했다고 설명했다.  
        또한 “지속 가능한 미래를 위한 우리의 약속”이라는 슬로건과 함께 자연을 배경으로 한 TV 광고도 선보였다.  
        제품 홍보 페이지에는 탄소 발자국 저감 수치를 별도로 기재하지 않았으며, 외부 인증 여부도 명시되지 않았다.  
        B전자는 “이제 친환경은 선택이 아니라 필수”라며, 관련 기술을 전 모델에 확대 적용할 계획임을 밝혔다.
        """,
        "answer": """
        1. 판단: 그린워싱 가능성 있음
        2. 근거: '세계 최고 수준의 친환경'이라는 표현은 객관적 기준 없이 절대적인 환경성을 주장하고 있으며,  
           온실가스 저감 기술에 대한 수치나 인증이 없이 강조된 점이 '과장 또는 부당한 일반화'에 해당합니다.
        3. 해결방안: 온실가스 배출 저감률 등의 수치를 명시하고, 해당 기술이 어떤 인증이나 기준을 충족하는지 제시해야 합니다.
        """
    },
    {
        "query": """
        C생활건강은 ‘그린리프’ 샴푸를 새롭게 선보이며, 자연 친화적 이미지를 내세운 마케팅을 강화하고 있다.  
        제품 용기는 식물 그림과 함께 녹색 배경으로 디자인돼, 자연 유래 성분을 연상케 한다.  
        광고 문구는 “지구가 숨 쉬는 건강한 머릿결”이며, 성분 설명에는 ‘에코 허브 블렌딩’이라는 표현이 반복된다.  
        하지만 제품 설명서에는 구체적인 성분명이나 친환경 인증 표시는 포함되지 않았다.  
        소비자들은 “향은 좋지만 실제로 얼마나 친환경적인지는 모르겠다”는 반응을 보이고 있다.
        """,
        "answer": """
        1. 판단: 그린워싱 가능성 있음
        2. 근거: 녹색 디자인과 비과학적 용어(‘에코 허브 블렌딩’)로 소비자가 친환경 제품으로 오인할 수 있으며,  
           성분 공개나 인증 정보가 없어 '객관적 근거 없는 상징 사용' 및 '정보의 불충분'에 해당합니다.
        3. 해결방안: 자연 유래 성분의 명칭과 비율을 명확히 기재하고, 관련 친환경 인증 마크를 표시해야 합니다.
        """
    },
]

base_prompt = PromptTemplate(
    template=template,
    input_variables=["query", "context"],
)

fewShot_prompt = FewShotPromptTemplate(
    examples=examples,
    example_prompt=PromptTemplate.from_template(
    "Question:\n{question}\nAnswer:\n{answer}"
),
    suffix="Question:\n{question}\nAnswer:\n{answer}",
    input_variables=["query", "context"],
)
